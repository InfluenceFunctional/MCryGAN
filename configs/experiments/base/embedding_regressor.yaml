machine: "local"  # or "cluster"
device: "cuda"  # or "cpu"
anomaly_detection: False  # slows down the code
mode: embedding_regression
dataset_name: 'qm9_molecules_dataset.pkl'
misc_dataset_name: 'misc_data_for_qm9_molecules_dataset.npy'
dataset_yaml_path: '/dataset/qm9_autoencoder.yaml' # '/dataset/full_discriminator.yaml' #
extra_test_set_name: null
save_checkpoints: True # will do it always on cluster, only locally if True
checkpointing_loss_type: test  # will save a new checkpoint when a minimum of this is reached
model_names: ['autoencoder', 'embedding_regressor']
sweep_id: null
sweep_path: null

dataset:
  max_dataset_length: 10000000
  test_fraction: 0.2
  filter_protons: True
  regression_target: molecule_gap_energy

# batching & convergence
early_epochs_step_override: 5
num_early_epochs: 0
grow_batch_size: True
min_batch_size: 50
max_batch_size: 2000
batch_growth_increment: 0.1 # fraction of batch size to grow by each epoch
overfit_tolerance: 4  # maximum allowed ratio of test_loss/train_loss
minimum_epochs: 50
max_epochs: 10000 # 0 epochs takes us straight to sampling/evaluation (only implemented for GAN)
history: 50  # for convergence checks
gradient_norm_clip: 1
extra_test_period: 1 # # MUST BE MULTIPLE OF SAMPLE REPORTING FREQUENCY how often to evaluate on extra test sets (hardcoded analysis per extra test set)

logger:
  run_name: dev
  experiment_tag: dev
  mini_csp_frequency: 5  # how often to run CSP-style search WIP
  sample_reporting_frequency: 5  # how often to do detailed reporting with figures
  log_figures: True

sample_steps: 100

seeds:
  model: 12345
  dataset: 0

# for reloading prior checkpoints
model_paths:
  discriminator: null
  generator: null
  regressor: null
  #autoencoder: null  # must provide a checkpoint for embedding regression
  #autoencoder: r'/cluster/best_autoencoder_autoencoder_tests_qm9_test23_4_26-02-22-29-57',  # no protons
  autoencoder: '/cluster/best_autoencoder_autoencoder_tests_qm9_test23_7_27-02-14-34-41'  # protons
  embedding_regressor: null

positional_noise:
  discriminator: 0
  generator: 0
  regressor: 0
  autoencoder: 0

generate_sgs: null
supercell_size: 5

autoencoder:
  init_sigma: 0.15
  optimizer: null
  model: null

embedding_regressor:
  prediction_type: scalar
  num_targets: 1
  optimizer:
    beta1: 0.9
    beta2: 0.999
    convergence_eps: 1.0e-04
    init_lr: 1.0e-4
    lr_growth_lambda: 1.1
    lr_schedule: true
    lr_shrink_lambda: 0.95
    max_lr: 5.0e-04
    min_lr: 5.0e-06
    optimizer: adamw
    use_plateau_scheduler: false
    weight_decay: 0.1

  model:
    depth: 128
    dropout: 0.1
    equivariant: true
    norm_mode: layer
    num_layers: 12
    vector_norm: 'vector layer'
