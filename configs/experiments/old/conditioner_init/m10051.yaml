test_mode: False
machine: "cluster"
device: "cuda"
explicit_run_enumeration: True
skip_saving_and_loading: True
run_num: 10051
anomaly_detection: False
mode: gan # 'gan' or 'regression' or 'figures' or 'sampling'
gan_loss: standard # standard only
save_checkpoints: False # will do it always on cluster, only locally if True

train_generator_conditioner: True # exclusive with other training modes
freeze_generator_conditioner: False # exclusive with pretraining geometry
train_generator_packing: False
train_generator_vdw: False
vdw_loss_rescaling: null
packing_loss_rescaling: mse
train_generator_combo: False
train_generator_h_bond: False # maximize h bonding (non-directional)
train_generator_adversarially: False
generator_similarity_penalty: 0

train_discriminator_adversarially: False
train_discriminator_on_randn: False
train_discriminator_on_distorted: False
sample_distortion_magnitude: -1 # -1 for wide range test # noise for distorted generation

extra_test_period: 10
extra_test_evaluation: False
extra_test_set_paths: [ 'C:/Users/mikem/Desktop/CSP_runs/datasets/csd_coumarins_dataset']
  #[ 'C:/Users/mikem/Desktop/CSP_runs/datasets/blind_test_5_dataset',
                        #'C:/Users/mikem/Desktop/CSP_runs/datasets/blind_test_6_dataset',
                        #'C:/Users/mikem/Desktop/CSP_runs/datasets/blind_test_targets',]
d_model_path: null #'C:\Users\mikem\Desktop\CSP_runs\models/cluster/discriminator_10032'
g_model_path: null #'C:\Users\mikem\Desktop\CSP_runs\models/cluster/generator_10010'

sample_steps: 1000
sample_move_size: 0.001

seeds:
  model: 0
  dataset: 0

# opt - sweep details
wandb:
  sample_reporting_frequency: 5
  experiment_tag: dev
  log_figures: True

# batching & convergence
accumulate_gradients: False
accumulate_batch_size: 10000
auto_batch_sizing: False
min_batch_size: 100
max_batch_size: 100
batch_growth_increment: 0.05
auto_batch_reduction: 0.25 # fraction of tested max batch size to actually start with (unequal graph sizes)
max_epochs: 5000 # 0 epochs takes us straight to evaluation mode
history: 1000
gradient_norm_clip: 10

# dataset curation
target: packing # 'density' or 'packing' or 'volume'
dataset_length: 1000000
feature_richness: minimal # full or minimal
max_crystal_temperature: 10000
min_crystal_temperature: -100
max_num_atoms: 20
min_num_atoms: 8 # target XVI has only 9 heavy atoms
max_molecule_radius: 5 # angstroms
max_z_value: 18
min_z_value: 0
max_z_prime: 1
min_z_prime: 1
max_packing_coefficient: 0.85
min_packing_coefficient: 0.55
include_organic: True
include_organometallic: True
max_atomic_number: 100
exclude_missing_r_factor: False
exclude_disordered_crystals: True
exclude_polymorphs: True
exclude_nonstandard_settings: True #False
exclude_crystal_systems: null #['hexagonal','trigonal','rhombohedral']
exclude_blind_test_targets: True
include_sgs: ["P-1","P21/c","P212121","C2/c"] #["P-1", "P21/c", "P212121", "C2/c", "Pbca", "P21"]
include_pgs: null #[222,-1,2/m] #[222, -1, 2/m, 2, mm2, mmm, m]
generate_sgs: null #'P2' #'P21/c' # can only do one at a time right now
supercell_size: 5 # new method - should be very large, automatically pares down

# https://www.ruppweb.org/Xray/tutorial/enantio.htm non enantiogenic groups

# discriminator optimizer and model
discriminator:
  optimizer: adam
  learning_rate: 1.0E-5
  max_lr: 5.0E-5
  lr_schedule: True
  beta1: 0.9
  beta2: 0.999
  weight_decay: 0.001
  convergence_eps: 0.00001
  training_period: 10
  positional_noise: 0 # scaling for the randn noise added to all atom positions
  lr_growth_lambda: 1.05
  lr_shrink_lambda: 1

  crystal_convolution_type: 2 # 1 - counts inter and intramolecular the same, 2 - separates intermolecular
  graph_convolution_layers: 1
  graph_filters: 4
  atom_embedding_size: 4
  graph_norm: graph
  num_spherical: 5
  num_radial: 32
  graph_convolution_cutoff: 6 # vdw direct force approx 6 angstrom
  max_num_neighbors: 100
  radial_function: 'bessel' # mikenet only
  num_attention_heads: 1 # mikenet GATv2 mode only - must evenly divide graph filters
  graph_convolution: 'TransformerConv' # 'full message passing' or schnet or 'GATv2'
  add_spherical_basis: False # mikenet only
  add_torsional_basis: False #
  pooling: combo

  num_fc_layers: 1
  fc_depth: 4
  activation: leaky relu
  fc_dropout_probability: 0
  fc_norm_mode: layer

# generator optimizer and model
generator:
  optimizer: adam
  learning_rate: 1.0E-3
  max_lr: 1.0E-3
  lr_schedule: True
  beta1: 0.9 #0.9
  beta2: 0.999 #0.999
  weight_decay: 0.01
  convergence_eps: 0.00001
  positional_noise: 0 # scaling for the randn noise added to all atom positions
  lr_growth_lambda: 1.05
  lr_shrink_lambda: 0.999

  canonical_conformer_orientation: 'random' # 'standardized' 'random'
  graph_convolution_layers: 4
  graph_filters: 64
  atom_embedding_size: 512
  graph_norm: graph
  num_spherical: 7
  num_radial: 50
  graph_convolution_cutoff: 2
  max_num_neighbors: 100
  radial_function: 'gaussian' # mikenet only
  num_attention_heads: 4 # mikenet GATv2 mode only - must evenly divide graph filters
  graph_convolution: 'none' #'TransformerConv' 'none' GATv2, schnet, or full message passing, or 'TransformerConv'
  add_spherical_basis: False # mikenet only
  add_torsional_basis: False
  pooling: max # combo, geometric max mean sum attention
  positional_embedding: 'sph3' # 'sph' or 'pos' or 'combo', for 'geometric' pooling

  conditioner_num_fc_layers: 2
  conditioner_fc_depth: 512
  conditioner_activation: 'leaky relu'
  conditioner_fc_dropout_probability: 0
  conditioner_fc_norm_mode: layer

  num_fc_layers: 4
  fc_depth: 512
  activation: 'leaky relu'
  fc_dropout_probability: 0
  fc_norm_mode: layer

  prior: multivariate normal
  prior_dimension: 12
  conditional_modelling: True # false will likely not run at all
  conditioning_mode: graph model # molecule features or graph model
